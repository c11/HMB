// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cpp_ghmb
Rcpp::List cpp_ghmb(const arma::vec& y_S, const arma::mat& X_S, const arma::mat& X_Sa, const arma::mat& Z_Sa, const arma::mat& Z_U, const arma::mat& Omega_S, const arma::mat& Sigma_Sa);
RcppExport SEXP _HMB_cpp_ghmb(SEXP y_SSEXP, SEXP X_SSEXP, SEXP X_SaSEXP, SEXP Z_SaSEXP, SEXP Z_USEXP, SEXP Omega_SSEXP, SEXP Sigma_SaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type y_S(y_SSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_S(X_SSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_Sa(X_SaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Z_Sa(Z_SaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Z_U(Z_USEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Omega_S(Omega_SSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sigma_Sa(Sigma_SaSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_ghmb(y_S, X_S, X_Sa, Z_Sa, Z_U, Omega_S, Sigma_Sa));
    return rcpp_result_gen;
END_RCPP
}
// cpp_hmb
Rcpp::List cpp_hmb(const arma::vec& Y_S, const arma::mat& X_S, const arma::mat& X_Sa, const arma::mat& Z_Sa, const arma::mat& Z_U);
RcppExport SEXP _HMB_cpp_hmb(SEXP Y_SSEXP, SEXP X_SSEXP, SEXP X_SaSEXP, SEXP Z_SaSEXP, SEXP Z_USEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type Y_S(Y_SSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_S(X_SSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_Sa(X_SaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Z_Sa(Z_SaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Z_U(Z_USEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_hmb(Y_S, X_S, X_Sa, Z_Sa, Z_U));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_HMB_cpp_ghmb", (DL_FUNC) &_HMB_cpp_ghmb, 7},
    {"_HMB_cpp_hmb", (DL_FUNC) &_HMB_cpp_hmb, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_HMB(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
